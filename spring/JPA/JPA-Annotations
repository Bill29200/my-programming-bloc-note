=====================================================================================================
1/ MODEL LAYER
=====================================================================================================
@Entity

// in the h√©ritage case we have 3 cases:
1/ @Inheritance (strategy = InheritanceType.SINGLE_TABLE)
@DiscriminatorColumn(name = "typeForExample", length = 4, discriminatorType = DiscriminatorType. STRING /INT/CHAR)


2/ @Inheritance (strategy = InheritanceType.JOINED)

3/ @Inheritance (strategy = InheritanceType.TABLE_PER_CLASS)

@ Table(
               name = "tablename",
               uniqueConstraints = {
                       @UniqueConstraint(name = "field_unique", columnNames = "...nomfield")
               }
       )
---------
// lombok
@NoArgsConstructor  @AllArgsConstructor @Getter @Setter @ToString @Builder
------------------
@Id

if id is Long we use
@GeneratedValue(strategy = GenerationType.IDENTITY)
-----------------
@Column(unique = true, name =" ", nullable = false);
---------------------
@OneToOne
 @JsonProperty(access =  JsonProperty.Access.WRITE_ONLY)
 @JoinColumn(name="...._id")
 -------------------
 @OneToOne(mappedBy = ".........",
             orphanRemoval = true,
             cascade = {CascadeType.PERSIST, CascadeType.REMOVE})
     @JoinColumn(name=".........._id")
 -------------------------
@OneToMany
@OneToMany(mappedBy = ".............")
-------------------------
@ManyToOne
@ManyToOne(fetch = FetchType.LAZY)
    @JsonProperty(access =  JsonProperty.Access.WRITE_ONLY)
    @JoinColumn(name = "........._id")

@ManyToMany
@JoinTable(name = "relation_table",
            joinColumns = @JoinColumn(name = "......_id"),
            inverseJoinColumns = @JoinColumn(name = ".....2_id"))

======================================================================================================================
2/ REPOSITORY LAYER
======================================================================================================================

@Repository

@Query("SELECT e FROM Employee e JOIN e.projects p WHERE p.id = ?1"
======================================================================================================================
3/ SERVICE LAYER
======================================================================================================================
@Service
======================================================================================================================
4/ CONTROLLER LAYER
======================================================================================================================

@RestController

@Autowired     // sur service et restController

@RequestMapping(path="api/......")
@GetMapping(path="")
@PostMapping("/add")
@PutMapping("/update")
@DeleteMapping("/delete")

@RequestBody
@PathVariable


======================================================================================================================
5/ APPLICATION
======================================================================================================================
@SpringBootApplication

@Bean
